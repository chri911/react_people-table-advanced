{"version":3,"sources":["Header.jsx","HomePage.jsx","NotFoundPage.jsx","api.js","PersonName.jsx","PersonRow.jsx","PeopleTable.jsx","PeoplePage.jsx","App.jsx","index.jsx"],"names":["Header","className","role","aria-label","exact","to","activeClassName","HomePage","NotFoundPage","getPeople","a","fetch","people","json","PersonName","name","slug","sex","search","useLocation","pathname","style","color","PersonRow","person","personId","useRouteMatch","params","backgroundColor","born","died","mother","motherName","father","fatherName","PeopleTable","useState","setPeople","history","useHistory","location","searchParams","URLSearchParams","appliedQuery","get","query","setQuery","sort","applyQuery","useCallback","debounce","newQuery","set","delete","push","toString","peopleWithParents","map","find","man","women","visiblePeople","lowerQuery","toLowerCase","filter","includes","currentPerson","nextPerson","localeCompare","handleClick","event","target","innerText","useEffect","then","placeholder","value","onChange","onClick","key","PeoplePage","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdd6d6f1.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n    <div className=\"navbar-brand\">\n      <NavLink\n        className=\"navbar-item is-tab\"\n        exact\n        to=\"/\"\n        activeClassName=\"is-active\"\n      >\n        Home page\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        className=\"navbar-item is-tab\"\n        activeClassName=\"is-active\"\n      >\n        People Table\n      </NavLink>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <h2 className=\"title is-2 is-spaced\">Home Page</h2>\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h2 className=\"title is-2 is-spaced\">Page not found</h2>\n);\n","const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async() => {\n  const people = await fetch(url);\n\n  return people.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const PersonName = ({ name, slug, sex }) => {\n  const { search } = useLocation();\n\n  return (\n    <td>\n      <Link\n        to={{\n          pathname: `/people/${slug}`,\n          search,\n        }}\n        style={{ color: sex === 'f' ? 'red' : 'blue' }}\n      >\n        {name}\n      </Link>\n    </td>\n  );\n};\n\nPersonName.propTypes = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport { PersonName } from './PersonName';\n\nexport const PersonRow = ({ person }) => {\n  const match = useRouteMatch('/people/:personId?');\n  const { personId } = match.params;\n\n  return (\n    <tr\n      className=\"Person\"\n      style={{\n        backgroundColor: person.slug === personId\n          ? 'greenyellow'\n          : 'inherit',\n      }}\n    >\n      <PersonName name={person.name} slug={person.slug} sex={person.sex} />\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {person.mother\n        ? (\n          <PersonName\n            name={person.mother.name}\n            slug={person.mother.slug}\n            sex={person.mother.sex}\n          />\n        )\n        : <td>{person.motherName}</td>\n      }\n      {person.father\n        ? (\n          <PersonName\n            name={person.father.name}\n            slug={person.father.slug}\n            sex={person.father.sex}\n          />\n        )\n        : <td>{person.fatherName}</td>\n      }\n    </tr>\n  );\n};\n\nPersonRow.propTypes = {\n  person: PropTypes.arrayOf({\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    fatherName: PropTypes.string,\n    motherName: PropTypes.string,\n    slug: PropTypes.string.isRequired,\n    mother: PropTypes.array,\n    father: PropTypes.array,\n  }).isRequired,\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPeople } from './api';\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n  const sort = searchParams.get('sortBy');\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push(`?${searchParams.toString()}`);\n    }, 500),\n\n    [],\n  );\n\n  const peopleWithParents = people.map(person => ({\n    ...person,\n    father: people.find(man => man.name === person.fatherName),\n    mother: people.find(women => women.name === person.motherName),\n  }));\n\n  let visiblePeople = peopleWithParents;\n\n  if (appliedQuery) {\n    const lowerQuery = appliedQuery.toLowerCase();\n\n    visiblePeople = peopleWithParents.filter(\n      person => (person.name.toLowerCase()\n        .includes(lowerQuery)\n      || person.fatherName\n        && person.fatherName.toLowerCase().includes(lowerQuery)\n      || person.motherName\n        && person.motherName.toLowerCase().includes(lowerQuery)\n      ),\n    );\n  }\n\n  if (sort) {\n    switch (sort) {\n      case 'name':\n        visiblePeople.sort(\n          (currentPerson, nextPerson) => currentPerson.name\n            .localeCompare(nextPerson.name),\n        );\n        break;\n      case 'sex':\n        visiblePeople.sort(\n          (currentPerson, nextPerson) => currentPerson.sex\n            .localeCompare(nextPerson.sex),\n        );\n        break;\n      case 'born':\n        visiblePeople.sort(\n          (currentPerson, nextPerson) => currentPerson.born - nextPerson.born,\n        );\n        break;\n      case 'died':\n        visiblePeople.sort(\n          (currentPerson, nextPerson) => currentPerson.died - nextPerson.died,\n        );\n        break;\n      default:\n        visiblePeople = visiblePeople;\n    }\n  }\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleClick = (event) => {\n    if (event.target.innerText) {\n      searchParams.set('sortBy', event.target.innerText);\n    } else {\n      searchParams.delete('sortBy');\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  return (\n    <>\n      <input\n        className=\"input\"\n        name=\"name\"\n        placeholder=\"name\"\n        value={query}\n        onChange={handleQueryChange}\n      />\n      <table className=\"PeopleTable table is-bordered is-striped is-hoverable\">\n        <thead className=\"subtitle is-4\">\n          <tr>\n            <td\n              onClick={handleClick}\n              style={{ backgroundColor: sort === 'name'\n                ? 'greenyellow'\n                : 'inherit' }}\n            >\n              name\n            </td>\n            <td\n              onClick={handleClick}\n              style={{ backgroundColor: sort === 'sex'\n                ? 'greenyellow'\n                : 'inherit' }}\n            >\n              sex\n            </td>\n            <td\n              onClick={handleClick}\n              style={{ backgroundColor: sort === 'born'\n                ? 'greenyellow'\n                : 'inherit' }}\n            >\n              born\n            </td>\n            <td\n              onClick={handleClick}\n              style={{ backgroundColor: sort === 'died'\n                ? 'greenyellow'\n                : 'inherit' }}\n            >\n              died\n            </td>\n            <td>mother</td>\n            <td>father</td>\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeople.map(person => (\n            <PersonRow person={person} key={person.slug} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => (\n  <>\n    <h2 className=\"title is-2 is-spaced\">People Table</h2>\n    <PeopleTable />\n  </>\n);\n","import React from 'react';\nimport 'bulma';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.scss';\nimport { Header } from './Header';\nimport { HomePage } from './HomePage';\nimport { NotFoundPage } from './NotFoundPage';\nimport { PeoplePage } from './PeoplePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/people\">\n        <PeoplePage />\n      </Route>\n      <Redirect exact path=\"/\" to=\"home\" />\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}